<!-- $Id$ -->
  <h1>News</h1>
  
  <hr class="top" />

  <div class="item">
  <div class="itemTitle">Simple 2D plotting works!</div>

  <div class="itemDate">18-Jan-2005</div>

  <div class="itemAuthor">Paul Cochrane</div>

  <div class="itemText">
      <p>
      Simple 2D plotting works in both <a href="http://www.vtk.org/">vtk</a>
      *and* <a href="http://www.gnuplot.info/">gnuplot</a>!!  This certainly
      felt like a major achievement, as it wasn't easy to get vtk to do 2D
      x-y plots.  To get a feeling for what I've done check out 
      <code>plotExample.py</code> in the <code>examples</code> directory of the 
      <a href="http://pyvisi.sourceforge.net">pyvisi</a> distribution.
      </p>
      <p>
      Please note that this is <strong>very</strong> basic.  At present one
      can only plot one set of data, and the way the data is transferred to 
      the renderer module in the backend is very simplistic and not amenable
      to scaling to large datasets.  Nevertheless, this example shows how 
      pyvisi can be used in the future.  It is also only possible to pass
      to the plotting routines two 1D arrays of data, one for the x-axis and
      one for the y-axis.  Also, there isn't any implementation yet for
      changing colour on the axes, or the plot lines, however there is limited
      functionality available for choosing different kinds of linestyles.
      I'm also not completely happy with the syntax at the user-level of the
      interface, and this has to change.  Specifically, the 
      <code>.add()</code> method
      of the scene object to add an object to the scene.  Surely this should
      be sorted out when one instantiates the object and passes the scene
      object as an argument.  The other method that needs to disappear from
      user-space is the <code>.render()</code> method of the individual 
      objects.  Users
      should only have to render the scene.  The problem here is to finish
      off some stuff that vtk needs before doing the final render (such as
      the <code>AddActor()</code> methods); this can be done a better way.  
      One problem 
      with the way I'm doing it at present is that re-rendering *doesn't* need
      the pre-render step.  But re-rendering is a different kettle of fish,
      and there are many other things to work on before we get to there.
      </p>
      <p>
      Note that to use the vtk renderer module, you must have vtk installed,
      and have configured vtk for python (so that the python vtk wrappers
      are available).  To use the gnuplot renderer module, you must have
      gnuplot (version greater than or equal to 3.7) installed, and
      <a href="http://gnuplot-py.sourceforge.net/">Gnuplot.py</a> (the
      gnuplot python wrapper).
      </p>
      <p>
      Even with all of these caveats, have a look at the example code, and 
      tell me if you like the syntax (or not), if you have any comments or
      suggestions as to what I could do extra or what I could do differently,
      or even if you were able to get the <code>plotExample.py</code> example
      to go!
      </p>
  </div>
  </div>
