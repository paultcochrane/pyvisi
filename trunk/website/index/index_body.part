<!-- $Id$ -->

  <h1>Pyvisi - The Python Visualisation Interface</h1>
  
  <hr class="top">

  <h2>Introduction</h2>

<p>
These are some of my ideas behind how the python visualisation stuff should be
structured. This is intended to be an implementation independent way of
interacting with a visualisation system. For instance, it is intended that one
could use the one set of code to display data using vtk, gnuplot, OpenGL, or
OpenDX for example. To get a feeling of the structure that I have in mind at
present, please see the class structure diagram (the diagram was output at
1024x768, and then I am scaling it within the browser to the width of the
browser window, hence why it looks so crappy in the window). Please be aware
that I am very open-minded about this, and if you wish we can discuss other
ways of implementing things here, or possibly different words to use for
various objects/ideas. This I feel is an important point for users to have a
consistent, logical and meaningful interface to actually get their relevant job
done. Also keep in mind that this structure will change.
</p>

<p>
One of the big ideas here is to build up libraries for the various renderers
that one can have, so that at the beginning of your script, you can specify
that you are using vtk (say), and go from there. Maybe you want to use POVRay
or RenderMan; you can change one line of code at the top of the script, and
then use that as the engine for displaying the data--the interface goes off and
handles all of the messy internal details about dealing with that particular
engine. Having many different kinds of renderers means that we need a nice
consistent interface, and this is what I'm trying to work towards.
</p>


  
